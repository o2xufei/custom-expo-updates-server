const crypto = require('crypto');
const fs = require('fs').promises;
const path = require('path');

async function getPrivateKeyAsync() {
  const privateKeyPath = process.env.PRIVATE_KEY_PATH || 'code-signing-keys/private-key.pem';
  try {
    const key = await fs.readFile(path.resolve(privateKeyPath), 'utf8');
    return key;
  } catch (err) {
    console.error('Error reading private key:', err);
    return null;
  }
}

async function getCertificateChainAsync() {
  const chainPath = process.env.CERT_CHAIN_PATH || 'code-signing-keys/fullchain.pem';
  try {
    const chain = await fs.readFile(path.resolve(chainPath), 'utf8');
    return chain;
  } catch (err) {
    console.error('Error reading certificate chain:', err);
    return null;
  }
}

function signRSASHA256(privateKey, data) {
  const sign = crypto.createSign('RSA-SHA256');
  sign.update(data);
  
  // 添加证书链信息
  const signature = sign.sign({
    key: privateKey,
    padding: crypto.constants.RSA_PKCS1_PSS_PADDING,
    passphrase: ''
  }, 'base64');
  
  return signature;
}

module.exports = {
  getPrivateKeyAsync,
  getCertificateChainAsync,
  signRSASHA256
};